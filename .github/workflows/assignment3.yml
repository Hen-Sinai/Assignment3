name: assignment3
on:
  push
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Generate log file
      run: |
        echo "$(date -Iminutes)" > log.txt
        echo "Your Name(s)" >> log.txt
    - name: Build and export
      id: build
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        tags: rest:latest, ${{ secrets.DOCKER_USERNAME }}/rest:latest
        outputs: type=docker,dest=/tmp/image.tar
    - name: Check if image is built
      if: ${{ job.status == 'success' }}
      run: |
        echo "Image successfully built" >> log.txt
    - name: Check if image build failed
      if: ${{ job.status != 'success' }}
      run: |
        echo "Image not able to be built" >> log.txt
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: rest
        path: /tmp/image.tar

  # test:
  #   name: Test
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Download artifact
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: rest
  #   - name: Load Docker images from previous workflows
  #     run: docker load --input rest/image.tar
  #   - name: Check rest image is loaded
  #     run: docker image ls
  #   - name: Run image in container
  #     run: docker run -p8000:8000 rest &
  #   - name: Check container is running
  #     run: docker ps
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.8
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install pytest
  #       pip install requests
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #   - name: Test with pytest
  #     run: |
  #       cd tests
  #       pytest -v assn3.py > test_results.txt
  #   - name: Check test results
  #     if: ${{ job.status == 'success' }}
  #     run: |
  #       echo "Tests succeeded" >> ../log.txt
  #   - name: Check if tests failed
  #     if: ${{ job.status != 'success' }}
  #     run: |
  #       echo "Tests failed" >> ../log.txt
  #   - name: Upload test results
  #     if: always()
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: GH_test_results
  #       path: tests/test_results.txt

#     The following steps will only execute if tests succeeded
    # - name: Set DATE
    #   run: echo "DATE=$(date -I)" >> $GITHUB_ENV
    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    # - name: push image with "latest" and date tags to DH
    #   run: |
    #     docker push ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
    #     docker tag ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2 \
    #     ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2:${{ env.DATE }}
    #     docker push \
    #     ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2:${{ env.DATE }}