name: assignment3
on:
  push
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Generate log file
      run: |
        echo "$(date -Iminutes)" > log.txt
        echo "Your Name(s)" >> log.txt
    - name: Build and export
      id: build
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        tags: rest:latest, ${{ secrets.DOCKER_USERNAME }}/rest:latest
        outputs: type=docker,dest=/tmp/image.tar
    - name: Check if image is built
      if: ${{ job.status == 'success' }}
      run: |
        echo "Image successfully built" >> log.txt
    - name: Check if image build failed
      if: ${{ job.status != 'success' }}
      run: |
        echo "Image not able to be built" >> log.txt
    - name: Upload log file
      uses: actions/upload-artifact@v3
      with:
        name: log
        path: log.txt
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: assn3
        path: /tmp/image.tar

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: assn3
    - name: Load Docker images from previous workflows
      run: docker load --input rest/image.tar
    - name: Check rest image is loaded
      run: docker image ls
    - name: Run image in container
      run: docker run -p8000:8000 rest &
    - name: Check container is running
      run: docker ps
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        cd tests
        pytest -v assn3_tests.py > assn3_test_result.txt
    - name: Download log file
      uses: actions/download-artifact@v3
      with:
        name: log
    - name: Check test results
      if: ${{ job.status == 'success' }}
      run: |
        echo "Tests succeeded" >> ../log.txt
    - name: Check if tests failed
      if: ${{ job.status != 'success' }}
      run: |
        echo "Tests failed" >> ../log.txt
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: GH_test_results
        path: tests/assn3_test_result.txt
    - name: Upload modified log file
      uses: actions/upload-artifact@v3
      with:
        name: log
        path: log.txt